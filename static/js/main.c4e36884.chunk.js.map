{"version":3,"sources":["components/Bar.module.scss","components/Slider/Slider.module.scss","components/BarPanel.module.scss","components/NavButton/NavButton.module.scss","components/NavBar/NavBar.module.scss","components/NavNumber/NavNumber.module.scss","function/barStatus.js","components/Bar.js","function/sortingType.js","components/BarPanel.js","components/NavButton/NavButton.js","function/initial.js","store/bubbleSortReducer.js","store/basic.js","store/selectionSortReducer.js","store/mergeSortReducer.js","components/Slider/Slider.js","components/NavNumber/NavNumber.js","function/sleep.js","components/NavBar/NavBar.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["module","exports","BarStatus","PROCESSING","STOPING","WAITING","FINISHING","Bar","props","height","Math","round","children","barBackgroundColor","status","className","classes","bar","style","gridRowEnd","backgroundColor","bar__text","SortingType","BUBBLE_SORT","SELECTION_SORT","MERGE_SORT","BarPanel","bubbleBarArray","useSelector","state","bubble","barArray","selectBarArray","select","mergeBarArray","merge","sortType","basic","sortingType","barPanel","map","item","number","id","NavButton","navbuttonColor","navButton","onClick","color","initialBarArray","arrayNumber","newArray","min","max","array","i","push","floor","random","randomArray","length","NUMBER_OF_ARRAY_BARS","totalCounter_bubble","value","initialBubbleSortState","number_of_array_bars","totalCounter","outerLoopCounter","innerLoopCounter","bubbleSortSlice","createSlice","name","initialState","reducers","resetArray","action","payload","bubble_Check","bubble_Swap","bubble_Finish","bubbleSortActions","actions","initialBasicState","basicSlice","resetSortType","basicActions","initialSelectionSortState","minIndex","selectionSortSlice","Selection_CheckAndUpdate","Selection_Swap","Selection_Finish","selectionSortActions","initialMergeSortState","splitArray","arrayLength","mid","ceil","console","log","arrayLeft","slice","arrayRight","shift","mergeArray","mergeSortSlice","merge_sort","mergeSortActions","Slider","arraySize","useRef","dispatch","useDispatch","slidecontainer","onChange","current","ref","type","defaultValue","slider","NavNumber","navNumber","timeDelay","ms","Promise","resolve","setTimeout","sleep","a","NavBar","bubble_number_of_array_bars","select_number_of_array_bars","merge_number_of_array_bars","delay","bubbleTotalCounter","selectTotalCounter","bubbleSort_recursive","Counter","selectionSort_recursive","navBar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","bubbleSortReducer","selectionSortReducer","mergeSortReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4e36884.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Bar_bar__tH7I0\",\"bar__text\":\"Bar_bar__text__2S9sF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slidecontainer\":\"Slider_slidecontainer__2I7wC\",\"slider\":\"Slider_slider__2hGiL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barPanel\":\"BarPanel_barPanel__2Lzxp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navButton\":\"NavButton_navButton__VHfRk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__nrKbN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navNumber\":\"NavNumber_navNumber__24Bzl\"};","const BarStatus = {\r\n  PROCESSING: \"Processing\",\r\n  STOPING: \"Stoping\",\r\n  WAITING: \"Waiting\",\r\n  FINISHING: \"Finishing\",\r\n};\r\n\r\nexport default BarStatus;\r\n","import classes from \"./Bar.module.scss\";\r\nimport BarStatus from \"../function/barStatus\";\r\n\r\nfunction Bar(props) {\r\n  const height = Math.round((props.children / 700) * 100);\r\n  const barBackgroundColor =\r\n    props.status === BarStatus.WAITING\r\n      ? \"#607D8B\"\r\n      : props.status === BarStatus.STOPING\r\n      ? \"#D32F2F\"\r\n      : props.status === BarStatus.FINISHING\r\n      ? \"#FFC107\"\r\n      : \"#4CAF50\"; // purple\r\n\r\n  //console.log(\"gererate bar \" + height);\r\n  return (\r\n    <div\r\n      className={classes.bar}\r\n      style={{ gridRowEnd: height, backgroundColor: barBackgroundColor }}\r\n    >\r\n      <p className={classes.bar__text}>{props.children}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bar;\r\n","const SortingType = {\r\n  BUBBLE_SORT: \"Bubble Sort\",\r\n  SELECTION_SORT: \"Selection Sort\",\r\n  MERGE_SORT: \"Merge Sort\",\r\n};\r\n\r\nexport default SortingType;\r\n","import classes from \"./BarPanel.module.scss\";\r\nimport Bar from \"./Bar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport sortingType from \"../function/sortingType\";\r\n\r\nfunction BarPanel(props) {\r\n  const bubbleBarArray = useSelector((state) => state.bubble.barArray);\r\n  const selectBarArray = useSelector((state) => state.select.barArray);\r\n  const mergeBarArray = useSelector((state) => state.merge.barArray);\r\n  let barArray = [];\r\n  const sortType = useSelector((state) => state.basic.sortType);\r\n  if (sortType === sortingType.BUBBLE_SORT) {\r\n    barArray = bubbleBarArray;\r\n  } else if (sortType === sortingType.SELECTION_SORT) {\r\n    barArray = selectBarArray;\r\n  } else if (sortType === sortingType.MERGE_SORT) {\r\n    barArray = mergeBarArray;\r\n  }\r\n  return (\r\n    <div className={classes.barPanel}>\r\n      {barArray.map((item) => (\r\n        <Bar key={item.id} status={item.status}>\r\n          {item.number}\r\n        </Bar>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarPanel;\r\n","import classes from \"./NavButton.module.scss\";\r\n\r\nfunction NavButton(props) {\r\n  const navbuttonColor = props.sortType === props.children ? \"yellow\" : \"white\";\r\n  return (\r\n    <li className={classes.navButton}>\r\n      <div onClick={props.onClick} style={{ color: navbuttonColor }}>\r\n        {props.children}\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NavButton;\r\n","import BarStatus from \"./barStatus\";\r\n\r\n// Change this value for the number of bars (value) in the array.\r\nfunction randomIntFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nfunction randomArray(number) {\r\n  const array = [];\r\n  for (let i = 0; i < number; i++) {\r\n    array.push(randomIntFromInterval(1, 701));\r\n  }\r\n  return array;\r\n}\r\n\r\nexport const initialBarArray = (arrayNumber) => {\r\n  const newArray = randomArray(arrayNumber);\r\n  const barArray = [];\r\n  for (var i = 0; i < newArray.length; i++) {\r\n    barArray.push({\r\n      id: i,\r\n      number: newArray[i],\r\n      status: BarStatus.WAITING,\r\n    });\r\n  }\r\n  return barArray;\r\n};\r\n\r\nexport const NUMBER_OF_ARRAY_BARS = 50;\r\n\r\nexport function delayValue(value) {\r\n  return value > 40 ? 1 : 40 - value;\r\n}\r\n\r\nexport function totalCounter_bubble(value) {\r\n  return ((1 + value) * value) / 2;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport BarStatus from \"../function/barStatus\";\r\nimport {\r\n  initialBarArray,\r\n  NUMBER_OF_ARRAY_BARS,\r\n  totalCounter_bubble,\r\n} from \"../function/initial\";\r\n\r\nconst initialBubbleSortState = {\r\n  barArray: initialBarArray(NUMBER_OF_ARRAY_BARS),\r\n  number_of_array_bars: NUMBER_OF_ARRAY_BARS,\r\n  totalCounter: totalCounter_bubble(NUMBER_OF_ARRAY_BARS - 1),\r\n  outerLoopCounter: 0,\r\n  innerLoopCounter: NUMBER_OF_ARRAY_BARS - 2,\r\n};\r\n\r\nconst bubbleSortSlice = createSlice({\r\n  name: \"bubbleSortReducer\",\r\n  initialState: initialBubbleSortState,\r\n  reducers: {\r\n    resetArray(state, action) {\r\n      state.barArray = initialBarArray(action.payload.number_of_array_bars);\r\n      state.number_of_array_bars = action.payload.number_of_array_bars;\r\n      state.totalCounter = totalCounter_bubble(\r\n        action.payload.number_of_array_bars - 1\r\n      );\r\n      state.outerLoopCounter = 0;\r\n      state.innerLoopCounter = action.payload.number_of_array_bars - 2;\r\n    },\r\n\r\n    bubble_Check(state, action) {\r\n      if (\r\n        state.barArray[state.outerLoopCounter].number <\r\n        state.barArray[state.outerLoopCounter + 1].number\r\n      ) {\r\n        state.barArray[state.outerLoopCounter].status = BarStatus.PROCESSING;\r\n        state.barArray[state.outerLoopCounter + 1].status =\r\n          BarStatus.PROCESSING;\r\n      } else {\r\n        state.barArray[state.outerLoopCounter].status = BarStatus.STOPING;\r\n        state.barArray[state.outerLoopCounter + 1].status = BarStatus.STOPING;\r\n      }\r\n    },\r\n    bubble_Swap(state) {\r\n      if (\r\n        state.barArray[state.outerLoopCounter].number >\r\n        state.barArray[state.outerLoopCounter + 1].number\r\n      ) {\r\n        [\r\n          state.barArray[state.outerLoopCounter],\r\n          state.barArray[state.outerLoopCounter + 1],\r\n        ] = [\r\n          state.barArray[state.outerLoopCounter + 1],\r\n          state.barArray[state.outerLoopCounter],\r\n        ];\r\n      }\r\n    },\r\n    bubble_Finish(state) {\r\n      if (state.outerLoopCounter === 0 && state.innerLoopCounter === 0) {\r\n        state.barArray[state.outerLoopCounter].status = BarStatus.FINISHING;\r\n        state.barArray[state.outerLoopCounter + 1].status = BarStatus.FINISHING;\r\n      } else {\r\n        state.barArray[state.outerLoopCounter].status = BarStatus.WAITING;\r\n        state.barArray[state.outerLoopCounter + 1].status = BarStatus.WAITING;\r\n      }\r\n\r\n      if (state.outerLoopCounter === state.innerLoopCounter) {\r\n        state.barArray[state.outerLoopCounter + 1].status = BarStatus.FINISHING;\r\n        state.innerLoopCounter--;\r\n        state.outerLoopCounter = 0;\r\n      } else {\r\n        state.outerLoopCounter++;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const bubbleSortActions = bubbleSortSlice.actions;\r\n\r\nexport default bubbleSortSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport SortingType from \"../function/sortingType\";\r\n\r\nconst initialBasicState = {\r\n  sortType: SortingType.BUBBLE_SORT,\r\n};\r\n\r\nconst basicSlice = createSlice({\r\n  name: \"Basic\",\r\n  initialState: initialBasicState,\r\n  reducers: {\r\n    resetSortType(state, action) {\r\n      state.sortType = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const basicActions = basicSlice.actions;\r\n\r\nexport default basicSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport BarStatus from \"../function/barStatus\";\r\nimport {\r\n  initialBarArray,\r\n  NUMBER_OF_ARRAY_BARS,\r\n  totalCounter_bubble,\r\n} from \"../function/initial\";\r\n\r\nconst initialSelectionSortState = {\r\n  barArray: initialBarArray(NUMBER_OF_ARRAY_BARS),\r\n  number_of_array_bars: NUMBER_OF_ARRAY_BARS,\r\n  totalCounter: totalCounter_bubble(NUMBER_OF_ARRAY_BARS - 1),\r\n  outerLoopCounter: 0,\r\n  innerLoopCounter: 1,\r\n  minIndex: 0,\r\n};\r\n\r\nconst selectionSortSlice = createSlice({\r\n  name: \"bubbleSortReducer\",\r\n  initialState: initialSelectionSortState,\r\n  reducers: {\r\n    resetArray(state, action) {\r\n      state.barArray = initialBarArray(action.payload.number_of_array_bars);\r\n      state.number_of_array_bars = action.payload.number_of_array_bars;\r\n      state.totalCounter = totalCounter_bubble(\r\n        action.payload.number_of_array_bars - 1\r\n      );\r\n      state.outerLoopCounter = 0;\r\n      state.innerLoopCounter = 1;\r\n      state.minIndex = 0;\r\n    },\r\n\r\n    Selection_CheckAndUpdate(state) {\r\n      if (state.innerLoopCounter - 1 !== state.outerLoopCounter) {\r\n        state.barArray[state.innerLoopCounter - 1].status = BarStatus.WAITING;\r\n      }\r\n\r\n      state.barArray[state.innerLoopCounter].status = BarStatus.PROCESSING;\r\n      if (\r\n        state.barArray[state.minIndex].number >\r\n        state.barArray[state.innerLoopCounter].number\r\n      ) {\r\n        state.minIndex = state.innerLoopCounter;\r\n        state.barArray[state.outerLoopCounter].status = BarStatus.STOPING;\r\n      } else {\r\n        state.barArray[state.outerLoopCounter].status = BarStatus.PROCESSING;\r\n      }\r\n    },\r\n    Selection_Swap(state) {\r\n      if (\r\n        state.barArray[state.outerLoopCounter].number >\r\n          state.barArray[state.minIndex].number &&\r\n        state.innerLoopCounter === state.number_of_array_bars - 1\r\n      ) {\r\n        [\r\n          state.barArray[state.outerLoopCounter],\r\n          state.barArray[state.minIndex],\r\n        ] = [\r\n          state.barArray[state.minIndex],\r\n          state.barArray[state.outerLoopCounter],\r\n        ];\r\n        state.barArray[state.minIndex].status = BarStatus.WAITING;\r\n        state.barArray[state.outerLoopCounter].status = BarStatus.WAITING;\r\n      }\r\n    },\r\n    Selection_Finish(state) {\r\n      if (state.innerLoopCounter === state.number_of_array_bars - 1) {\r\n        state.outerLoopCounter++;\r\n        state.innerLoopCounter = state.outerLoopCounter + 1;\r\n        state.minIndex = state.outerLoopCounter;\r\n        state.barArray[state.number_of_array_bars - 1].status =\r\n          BarStatus.WAITING;\r\n        state.barArray[state.outerLoopCounter - 1].status = BarStatus.FINISHING;\r\n        if (state.outerLoopCounter === state.number_of_array_bars - 1) {\r\n          state.barArray[state.outerLoopCounter].status = BarStatus.FINISHING;\r\n        }\r\n      } else {\r\n        state.innerLoopCounter++;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectionSortActions = selectionSortSlice.actions;\r\n\r\nexport default selectionSortSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { initialBarArray, NUMBER_OF_ARRAY_BARS } from \"../function/initial\";\r\n\r\nconst initialMergeSortState = {\r\n  barArray: initialBarArray(NUMBER_OF_ARRAY_BARS),\r\n  number_of_array_bars: NUMBER_OF_ARRAY_BARS,\r\n};\r\n\r\nfunction splitArray(array) {\r\n  const arrayLength = array.length;\r\n  if (arrayLength < 2) return array;\r\n\r\n  const mid = Math.ceil(arrayLength / 2);\r\n  console.log(arrayLength);\r\n  console.log(mid);\r\n  const arrayLeft = array.slice(0, mid);\r\n  const arrayRight = array.slice(mid, arrayLength);\r\n  const array_l = splitArray(arrayLeft);\r\n  const array_r = splitArray(arrayRight);\r\n  return mergeArray(array_l, array_r);\r\n}\r\n\r\nfunction mergeArray(arrayLeft, arrayRight) {\r\n  const newArray = [];\r\n\r\n  while (arrayLeft.length && arrayRight.length) {\r\n    if (arrayLeft[0].number < arrayRight[0].number) {\r\n      newArray.push(arrayLeft.shift());\r\n    } else {\r\n      newArray.push(arrayRight.shift());\r\n    }\r\n  }\r\n\r\n  while (arrayLeft.length) {\r\n    newArray.push(arrayLeft.shift());\r\n  }\r\n\r\n  while (arrayRight.length) {\r\n    newArray.push(arrayRight.shift());\r\n  }\r\n\r\n  return newArray;\r\n}\r\n\r\nconst mergeSortSlice = createSlice({\r\n  name: \"mergeSortReducer\",\r\n  initialState: initialMergeSortState,\r\n  reducers: {\r\n    resetArray(state, action) {\r\n      state.barArray = initialBarArray(action.payload.number_of_array_bars);\r\n      state.number_of_array_bars = action.payload.number_of_array_bars;\r\n    },\r\n    merge_sort(state) {\r\n      state.barArray = splitArray(state.barArray);\r\n    },\r\n  },\r\n});\r\n\r\nexport const mergeSortActions = mergeSortSlice.actions;\r\n\r\nexport default mergeSortSlice.reducer;\r\n","import { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport classes from \"./Slider.module.scss\";\r\nimport { bubbleSortActions } from \"../../store/bubbleSortReducer\";\r\nimport { selectionSortActions } from \"../../store/selectionSortReducer\";\r\nimport { mergeSortActions } from \"../../store/mergeSortReducer\";\r\nimport sortingType from \"../../function/sortingType\";\r\n\r\nfunction Slider(props) {\r\n  const arraySize = useRef();\r\n  const dispatch = useDispatch();\r\n  const changeHandler = () => {\r\n    if (props.sortType === sortingType.BUBBLE_SORT) {\r\n      dispatch(\r\n        bubbleSortActions.resetArray({\r\n          number_of_array_bars: arraySize.current.value,\r\n        })\r\n      );\r\n    } else if (props.sortType === sortingType.SELECTION_SORT) {\r\n      dispatch(\r\n        selectionSortActions.resetArray({\r\n          number_of_array_bars: arraySize.current.value,\r\n        })\r\n      );\r\n    } else if (props.sortType === sortingType.MERGE_SORT) {\r\n      dispatch(\r\n        mergeSortActions.resetArray({\r\n          number_of_array_bars: arraySize.current.value,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className={classes.slidecontainer}>\r\n      <input\r\n        onChange={changeHandler}\r\n        ref={arraySize}\r\n        type=\"range\"\r\n        min=\"3\"\r\n        max=\"100\"\r\n        defaultValue=\"50\"\r\n        className={classes.slider}\r\n        id=\"myRange\"\r\n      ></input>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import classes from \"./NavNumber.module.scss\";\r\n\r\nfunction NavNumber(props) {\r\n  return (\r\n    <li className={classes.navNumber}>\r\n      <div>{props.children}</div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NavNumber;\r\n","export function timeDelay(ms) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, ms);\r\n  });\r\n}\r\n\r\nexport async function sleep(ms) {\r\n  return await timeDelay(ms);\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport NavButton from \"../NavButton/NavButton\";\r\nimport classes from \"./NavBar.module.scss\";\r\nimport { bubbleSortActions } from \"../../store/bubbleSortReducer\";\r\nimport { basicActions } from \"../../store/basic\";\r\nimport SortingType from \"../../function/sortingType\";\r\nimport Slider from \"../Slider/Slider\";\r\nimport NavNumber from \"../NavNumber/NavNumber\";\r\nimport { sleep } from \"../../function/sleep\";\r\nimport { delayValue } from \"../../function/initial\";\r\nimport { selectionSortActions } from \"../../store/selectionSortReducer\";\r\nimport { mergeSortActions } from \"../../store/mergeSortReducer\";\r\n\r\nfunction NavBar() {\r\n  const dispatch = useDispatch();\r\n  const sortType = useSelector((state) => state.basic.sortType);\r\n\r\n  const bubble_number_of_array_bars = useSelector(\r\n    (state) => state.bubble.number_of_array_bars\r\n  );\r\n  const select_number_of_array_bars = useSelector(\r\n    (state) => state.select.number_of_array_bars\r\n  );\r\n  const merge_number_of_array_bars = useSelector(\r\n    (state) => state.merge.number_of_array_bars\r\n  );\r\n\r\n  const number_of_array_bars =\r\n    sortType === SortingType.BUBBLE_SORT\r\n      ? bubble_number_of_array_bars\r\n      : sortType === SortingType.BUBBLE_SORT\r\n      ? select_number_of_array_bars\r\n      : merge_number_of_array_bars;\r\n  const delay = delayValue(number_of_array_bars);\r\n  const bubbleTotalCounter = useSelector((state) => state.bubble.totalCounter);\r\n  const selectTotalCounter = useSelector((state) => state.select.totalCounter);\r\n\r\n  const bubbleSort_recursive = async (Counter) => {\r\n    if (Counter === 0) {\r\n      return;\r\n    }\r\n    dispatch(bubbleSortActions.bubble_Check());\r\n    await sleep(delay);\r\n    dispatch(bubbleSortActions.bubble_Swap());\r\n    await sleep(delay);\r\n    dispatch(bubbleSortActions.bubble_Finish());\r\n    await sleep(delay);\r\n    Counter--;\r\n    bubbleSort_recursive(Counter);\r\n  };\r\n\r\n  const selectionSort_recursive = async (Counter) => {\r\n    console.log(Counter);\r\n    if (Counter === 0) {\r\n      return;\r\n    }\r\n    dispatch(selectionSortActions.Selection_CheckAndUpdate());\r\n    await sleep(delay);\r\n    dispatch(selectionSortActions.Selection_Swap());\r\n    await sleep(delay);\r\n    dispatch(selectionSortActions.Selection_Finish());\r\n    await sleep(delay);\r\n\r\n    Counter--;\r\n    selectionSort_recursive(Counter);\r\n  };\r\n\r\n  const generateArrayHandler = () => {\r\n    if (sortType === SortingType.BUBBLE_SORT) {\r\n      dispatch(\r\n        bubbleSortActions.resetArray({\r\n          number_of_array_bars: number_of_array_bars,\r\n        })\r\n      );\r\n    } else if (sortType === SortingType.SELECTION_SORT) {\r\n      dispatch(\r\n        selectionSortActions.resetArray({\r\n          number_of_array_bars: number_of_array_bars,\r\n        })\r\n      );\r\n    } else if (sortType === SortingType.MERGE_SORT) {\r\n      dispatch(\r\n        mergeSortActions.resetArray({\r\n          number_of_array_bars: number_of_array_bars,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const startSortingHandler = () => {\r\n    if (sortType === SortingType.BUBBLE_SORT) {\r\n      bubbleSort_recursive(bubbleTotalCounter);\r\n    } else if (sortType === SortingType.SELECTION_SORT) {\r\n      selectionSort_recursive(selectTotalCounter);\r\n    } else if (sortType === SortingType.MERGE_SORT) {\r\n      dispatch(mergeSortActions.merge_sort());\r\n    }\r\n  };\r\n  const bubbleSortHandler = () => {\r\n    dispatch(basicActions.resetSortType(SortingType.BUBBLE_SORT));\r\n  };\r\n  const selectionSort = () => {\r\n    dispatch(basicActions.resetSortType(SortingType.SELECTION_SORT));\r\n  };\r\n  const mergeSortHandler = () => {\r\n    dispatch(basicActions.resetSortType(SortingType.MERGE_SORT));\r\n  };\r\n\r\n  return (\r\n    <ul className={classes.navBar}>\r\n      <NavButton onClick={generateArrayHandler}>Generate New Array</NavButton>\r\n      <NavButton onClick={bubbleSortHandler} sortType={sortType}>\r\n        {SortingType.BUBBLE_SORT}\r\n      </NavButton>\r\n      <NavButton onClick={selectionSort} sortType={sortType}>\r\n        {SortingType.SELECTION_SORT}\r\n      </NavButton>\r\n      <NavButton onClick={mergeSortHandler} sortType={sortType}>\r\n        {SortingType.MERGE_SORT}\r\n      </NavButton>\r\n      <NavButton onClick={startSortingHandler}>Sort!</NavButton>\r\n      <Slider sortType={sortType}></Slider>\r\n      <NavNumber>{`Array Number: ${number_of_array_bars}`}</NavNumber>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { Fragment } from \"react\";\r\nimport \"./App.css\";\r\nimport BarPanel from \"./components/BarPanel\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <NavBar />\r\n      <BarPanel />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport bubbleSortReducer from \"./bubbleSortReducer\";\r\nimport selectionSortReducer from \"./selectionSortReducer\";\r\nimport mergeSortReducer from \"./mergeSortReducer\";\r\nimport basic from \"./basic\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    bubble: bubbleSortReducer,\r\n    basic: basic,\r\n    select: selectionSortReducer,\r\n    merge: mergeSortReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}