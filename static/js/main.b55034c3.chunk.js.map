{"version":3,"sources":["components/Bar.module.scss","components/Slider/Slider.module.scss","components/BarPanel.module.scss","components/NavButton/NavButton.module.scss","components/NavBar/NavBar.module.scss","components/NavNumber/NavNumber.module.scss","function/status.js","components/Bar.js","components/BarPanel.js","components/NavButton/NavButton.js","function/sortingType.js","store/array.js","components/Slider/Slider.js","components/NavNumber/NavNumber.js","components/NavBar/NavBar.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["module","exports","Status","PROCESSING","STOPING","WAITING","FINISHING","Bar","props","height","Math","round","children","barBackgroundColor","status","className","classes","bar","style","gridRowEnd","backgroundColor","bar__text","BarPanel","barArray","useSelector","state","array","barPanel","map","item","number","id","NavButton","navbuttonColor","sortType","navButton","onClick","color","SortingType","BUBBLE_SORT","SELECTION_SORT","MERGE_SORT","initialArrayState","number_of_array_bars","sortingCounter","finishedCounter","delay","arraySlice","createSlice","name","initialState","reducers","resetArray","action","payload","newArray","min","max","i","push","floor","random","randomArray","length","resetSortType","sortArray","console","log","stop","swap","goNext","arrayActions","actions","Slider","arraySize","useRef","dispatch","useDispatch","slidecontainer","onChange","current","value","ref","type","defaultValue","slider","NavNumber","navNumber","NavBar","recursive","setTimeout","navBar","swapTimes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","arrayReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b55034c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Bar_bar__EFxSg\",\"bar__text\":\"Bar_bar__text__3wgms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slidecontainer\":\"Slider_slidecontainer__2jxaY\",\"slider\":\"Slider_slider__1td-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barPanel\":\"BarPanel_barPanel__2mOO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navButton\":\"NavButton_navButton__X0w1k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__1fOPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navNumber\":\"NavNumber_navNumber__GpMOe\"};","const Status = {\r\n  PROCESSING: \"Processing\",\r\n  STOPING: \"Stoping\",\r\n  WAITING: \"Waiting\",\r\n  FINISHING: \"Finishing\",\r\n};\r\n\r\nexport default Status;\r\n","import classes from \"./Bar.module.scss\";\r\nimport Status from \"../function/status\";\r\n\r\nfunction Bar(props) {\r\n  const height = Math.round((props.children / 700) * 100);\r\n  const barBackgroundColor =\r\n    props.status === Status.WAITING\r\n      ? \"#607D8B\"\r\n      : props.status === Status.STOPING\r\n      ? \"#D32F2F\"\r\n      : props.status === Status.FINISHING\r\n      ? \"#FFC107\"\r\n      : \"#4CAF50\"; // purple\r\n\r\n  //console.log(\"gererate bar \" + height);\r\n  return (\r\n    <div\r\n      className={classes.bar}\r\n      style={{ gridRowEnd: height, backgroundColor: barBackgroundColor }}\r\n    >\r\n      <p className={classes.bar__text}>{props.children}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bar;\r\n","import classes from \"./BarPanel.module.scss\";\r\nimport Bar from \"./Bar\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction BarPanel(props) {\r\n  const barArray = useSelector((state) => state.array.barArray);\r\n\r\n  return (\r\n    <div className={classes.barPanel}>\r\n      {barArray.map((item) => (\r\n        <Bar key={item.id} status={item.status}>\r\n          {item.number}\r\n        </Bar>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarPanel;\r\n","import classes from \"./NavButton.module.scss\";\r\n\r\nfunction NavButton(props) {\r\n  const navbuttonColor = props.sortType === props.children ? \"yellow\" : \"white\";\r\n  return (\r\n    <li className={classes.navButton}>\r\n      <div onClick={props.onClick} style={{ color: navbuttonColor }}>\r\n        {props.children}\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NavButton;\r\n","const SortingType = {\r\n  BUBBLE_SORT: \"Bubble Sort\",\r\n  SELECTION_SORT: \"Selection Sort\",\r\n  MERGE_SORT: \"Merge Sort\",\r\n};\r\n\r\nexport default SortingType;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport SortingType from \"../function/sortingType\";\r\nimport Status from \"../function/status\";\r\n\r\n// Change this value for the number of bars (value) in the array.\r\nfunction randomIntFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nfunction randomArray(number) {\r\n  const array = [];\r\n  for (let i = 0; i < number; i++) {\r\n    array.push(randomIntFromInterval(1, 701));\r\n  }\r\n  return array;\r\n}\r\n\r\nconst initialArrayState = {\r\n  barArray: [],\r\n  number_of_array_bars: 50,\r\n  sortType: SortingType.BUBBLE_SORT,\r\n  sortingCounter: -1,\r\n  finishedCounter: 0,\r\n  delay: 1,\r\n};\r\n\r\nconst arraySlice = createSlice({\r\n  name: \"Array\",\r\n  initialState: initialArrayState,\r\n  reducers: {\r\n    resetArray(state, action) {\r\n      state.barArray = [];\r\n      state.delay = action.payload.delay;\r\n      state.number_of_array_bars = action.payload.number_of_array_bars;\r\n      state.finishedCounter = state.number_of_array_bars - 1;\r\n      state.sortType = action.payload.sortType;\r\n      state.sortingCounter = -1;\r\n      const newArray = randomArray(state.number_of_array_bars);\r\n\r\n      for (var i = 0; i < newArray.length; i++) {\r\n        state.barArray.push({\r\n          id: i,\r\n          number: newArray[i],\r\n          status: Status.WAITING,\r\n        });\r\n      }\r\n    },\r\n    resetSortType(state, action) {\r\n      state.sortType = action.payload;\r\n    },\r\n    sortArray(state, action) {\r\n      if (state.sortType === SortingType.BUBBLE_SORT) {\r\n        state.sortingCounter++;\r\n        if (state.sortingCounter !== 0) {\r\n          state.barArray[state.sortingCounter - 1].status =\r\n            state.barArray[state.sortingCounter - 1].status === Status.FINISHING\r\n              ? Status.FINISHING\r\n              : Status.WAITING;\r\n        }\r\n        state.barArray[state.sortingCounter].status =\r\n          state.barArray[state.sortingCounter].status === Status.FINISHING\r\n            ? Status.FINISHING\r\n            : Status.PROCESSING;\r\n        state.barArray[state.sortingCounter + 1].status =\r\n          state.barArray[state.sortingCounter + 1].status === Status.FINISHING\r\n            ? Status.FINISHING\r\n            : Status.PROCESSING;\r\n\r\n        console.log(\"**sortArray**\");\r\n      } else if (state.sortType === SortingType.SELECTION_SORT) {\r\n        //TODO:\r\n      } else if (state.sortType === SortingType.MERGE_SORT) {\r\n        //TODO:\r\n      }\r\n    },\r\n    stop(state) {\r\n      if (\r\n        state.sortType === SortingType.BUBBLE_SORT &&\r\n        state.sortingCounter !== -1\r\n      ) {\r\n        if (\r\n          state.barArray[state.sortingCounter].number >\r\n          state.barArray[state.sortingCounter + 1].number\r\n        ) {\r\n          state.barArray[state.sortingCounter].status =\r\n            state.barArray[state.sortingCounter].status === Status.FINISHING\r\n              ? Status.FINISHING\r\n              : Status.STOPING;\r\n          state.barArray[state.sortingCounter + 1].status =\r\n            state.barArray[state.sortingCounter + 1].status === Status.FINISHING\r\n              ? Status.FINISHING\r\n              : Status.STOPING;\r\n          console.log(\"**stop**\");\r\n        }\r\n      }\r\n    },\r\n    swap(state, action) {\r\n      if (\r\n        state.sortType === SortingType.BUBBLE_SORT &&\r\n        state.sortingCounter !== -1\r\n      ) {\r\n        if (\r\n          state.barArray[state.sortingCounter].number >\r\n          state.barArray[state.sortingCounter + 1].number\r\n        ) {\r\n          [\r\n            state.barArray[state.sortingCounter],\r\n            state.barArray[state.sortingCounter + 1],\r\n          ] = [\r\n            state.barArray[state.sortingCounter + 1],\r\n            state.barArray[state.sortingCounter],\r\n          ];\r\n          console.log(\"**swap**\");\r\n        }\r\n      }\r\n    },\r\n    goNext(state) {\r\n      if (\r\n        state.sortType === SortingType.BUBBLE_SORT &&\r\n        state.sortingCounter !== -1\r\n      ) {\r\n        if (\r\n          state.barArray[state.sortingCounter].number <\r\n          state.barArray[state.sortingCounter + 1].number\r\n        ) {\r\n          state.barArray[state.sortingCounter].status =\r\n            state.barArray[state.sortingCounter].status === Status.FINISHING\r\n              ? Status.FINISHING\r\n              : Status.PROCESSING;\r\n          state.barArray[state.sortingCounter + 1].status =\r\n            state.barArray[state.sortingCounter + 1].status === Status.FINISHING\r\n              ? Status.FINISHING\r\n              : Status.PROCESSING;\r\n        }\r\n        if (\r\n          state.sortingCounter === state.barArray.length - 2 &&\r\n          state.finishedCounter >= 0\r\n        ) {\r\n          state.barArray[state.finishedCounter].status = Status.FINISHING;\r\n          // detail\r\n          if (state.finishedCounter === state.number_of_array_bars - 1) {\r\n            state.barArray[state.finishedCounter - 1].status = Status.WAITING;\r\n          }\r\n          state.finishedCounter--;\r\n          state.sortingCounter = -1;\r\n          console.log(\"**goNext**\");\r\n        }\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const arrayActions = arraySlice.actions;\r\n\r\nexport default arraySlice.reducer;\r\n","import { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport classes from \"./Slider.module.scss\";\r\nimport { arrayActions } from \"../../store/array\";\r\n\r\nfunction Slider(props) {\r\n  const arraySize = useRef();\r\n  const dispatch = useDispatch();\r\n  const changeHandler = () => {\r\n    dispatch(\r\n      arrayActions.resetArray({\r\n        number_of_array_bars: arraySize.current.value,\r\n        delay: arraySize.current.value > 40 ? 1 : 40 - arraySize.current.value,\r\n        sortType: props.sortType,\r\n      })\r\n    );\r\n    console.log(arraySize.current.value);\r\n  };\r\n\r\n  return (\r\n    <li className={classes.slidecontainer}>\r\n      <input\r\n        onChange={changeHandler}\r\n        ref={arraySize}\r\n        type=\"range\"\r\n        min=\"3\"\r\n        max=\"100\"\r\n        defaultValue=\"50\"\r\n        className={classes.slider}\r\n        id=\"myRange\"\r\n      ></input>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import classes from \"./NavNumber.module.scss\";\r\n\r\nfunction NavNumber(props) {\r\n  return (\r\n    <li className={classes.navNumber}>\r\n      <div>{props.children}</div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NavNumber;\r\n","import { useDispatch } from \"react-redux\";\r\nimport NavButton from \"../NavButton/NavButton\";\r\nimport classes from \"./NavBar.module.scss\";\r\nimport { arrayActions } from \"../../store/array\";\r\nimport SortingType from \"../../function/sortingType\";\r\nimport Slider from \"../Slider/Slider\";\r\nimport NavNumber from \"../NavNumber/NavNumber\";\r\n\r\nfunction NavBar(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const recursive = (i) => {\r\n    console.log(i);\r\n    console.log(`Speed ${props.delay}`);\r\n\r\n    if (i === 1) return;\r\n    setTimeout(() => {\r\n      // level 1\r\n      dispatch(arrayActions.sortArray());\r\n      setTimeout(() => {\r\n        // level 2\r\n        dispatch(arrayActions.stop());\r\n        setTimeout(() => {\r\n          // level 3\r\n          dispatch(arrayActions.swap());\r\n          setTimeout(() => {\r\n            // level 4\r\n            dispatch(arrayActions.goNext());\r\n            recursive(--i);\r\n          }, props.delay);\r\n        }, props.delay);\r\n      }, props.delay);\r\n    }, props.delay);\r\n  };\r\n\r\n  const generateArrayHandler = () => {\r\n    dispatch(\r\n      arrayActions.resetArray({\r\n        number_of_array_bars: props.number_of_array_bars,\r\n        sortType: props.sortType,\r\n        delay: props.delay,\r\n      })\r\n    );\r\n  };\r\n\r\n  const startSortingHandler = () => {\r\n    const swapTimes = props.number_of_array_bars * props.number_of_array_bars;\r\n    recursive(swapTimes);\r\n  };\r\n  const bubbleSortHandler = () => {\r\n    dispatch(arrayActions.resetSortType(SortingType.BUBBLE_SORT));\r\n  };\r\n  const selectionSort = () => {\r\n    dispatch(arrayActions.resetSortType(SortingType.SELECTION_SORT));\r\n  };\r\n  const mergeSortHandler = () => {\r\n    dispatch(arrayActions.resetSortType(SortingType.MERGE_SORT));\r\n  };\r\n\r\n  return (\r\n    <ul className={classes.navBar}>\r\n      <NavButton onClick={generateArrayHandler}>Generate New Array</NavButton>\r\n      <NavButton onClick={bubbleSortHandler} sortType={props.sortType}>\r\n        {SortingType.BUBBLE_SORT}\r\n      </NavButton>\r\n      <NavButton onClick={selectionSort} sortType={props.sortType}>\r\n        {SortingType.SELECTION_SORT}\r\n      </NavButton>\r\n      <NavButton onClick={mergeSortHandler} sortType={props.sortType}>\r\n        {SortingType.MERGE_SORT}\r\n      </NavButton>\r\n      <NavButton onClick={startSortingHandler}>Sort!</NavButton>\r\n      <Slider sortType={props.sortType}></Slider>\r\n      <NavNumber>{`Array Number: ${props.number_of_array_bars}`}</NavNumber>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport BarPanel from \"./components/BarPanel\";\nimport NavBar from \"./components/NavBar/NavBar\";\n\nfunction App() {\n  const sortType = useSelector((state) => state.array.sortType);\n  const sortingCounter = useSelector((state) => state.array.sortingCounter);\n  const barArray = useSelector((state) => state.array.barArray);\n  const delay = useSelector((state) => state.array.delay);\n  const number_of_array_bars = useSelector(\n    (state) => state.array.number_of_array_bars\n  );\n\n  return (\n    <Fragment>\n      <NavBar\n        sortType={sortType}\n        sortingCounter={sortingCounter}\n        barArray={barArray}\n        number_of_array_bars={number_of_array_bars}\n        delay={delay}\n      />\n      <BarPanel sortType={sortType} sortingCounter={sortingCounter} />\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport arrayReducer from \"./array\";\r\n\r\nconst store = configureStore({\r\n  reducer: { array: arrayReducer },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}